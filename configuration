# SEA17: TEVO Tarantula with large bed 200x280. the head offsets set for Narrow 
# vertical Narrow X-Cartgige by EkkuZakku: https://www.thingiverse.com/thing:2563543 
# with my Rigid backplate: https://www.thingiverse.com/thing:2729956 and Inductive 
# Sensor Bracket LJ18A3-8-Z/BX by ahalekelly: 
# http://www.thingiverse.com/thing:2463855 You can use your own offsets, e.g. same 
# that you specified in firmware Merlin for Tarantula in Configuration.h The 
# stepper_x section is used to describe the stepper controlling the X axis in a 
# cartesian robot.
[stepper_x] 
step_pin: ar54
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: ar55
#   Direction GPIO pin (high indicates positive direction). This parameter must be 
#   provided.
enable_pin: !ar38
#   Enable pin (default is enable high; use ! to indicate enable low). If this 
#   parameter is not provided then the stepper motor driver must always be enabled.
step_distance: .0125
#   Distance in mm that each step causes the axis to travel. This parameter must be 
#   provided.
endstop_pin: ^!ar3
#   Endstop switch detection pin. This parameter must be provided for the X, Y, and Z 
#   steppers on cartesian style printers.
#position_min: 0 Minimum valid distance (in mm) the user may command the stepper to 
#   move to.  The default is 0mm.
position_endstop: 0
#   Location of the endstop (in mm). This parameter must be provided for the X, Y, 
#   and Z steppers on cartesian style printers.
position_max: 200
#   Maximum valid distance (in mm) the user may command the stepper to move to. This 
#   parameter must be provided for the X, Y, and Z steppers on cartesian style 
#   printers.
homing_speed: 80.0
#   Maximum velocity (in mm/s) of the stepper when homing. The default is 5mm/s. 
#homing_retract_dist: 5.0
#   Distance to backoff (in mm) before homing a second time during homing. The 
#   default is 5mm.
#homing_positive_dir: If true, homing will cause the stepper to move in a positive 
#   direction (away from zero); if false, home towards zero. The default is true if 
#   position_endstop is near position_max and false if near position_min.
# The stepper_y section is used to describe the stepper controlling the Y axis in a 
# cartesian robot. It has the same settings as the stepper_x section.
[stepper_y] 
step_pin: ar60 
dir_pin: ar61 
enable_pin: !ar56 
step_distance: .0125 
endstop_pin: ^!ar14 
position_min: -40
position_endstop: -25
position_max: 221
homing_speed: 80.0
# The stepper_z section is used to describe the stepper controlling the Z axis in a 
# cartesian robot. It has the same settings as the stepper_x section.
[stepper_z] 
step_pin: ar46 
dir_pin: ar48 
enable_pin: !ar62
#step_distance: .0025
step_distance: .000625
#endstop_pin: ^!ar18
endstop_pin: probe:z_virtual_endstop 
#position_endstop: 0
position_max: 191
position_min: -10 
homing_speed: 10
# The extruder section is used to describe both the stepper controlling the printer 
# extruder and the heater parameters for the nozzle. The stepper configuration has 
# the same settings as the stepper_x section and the heater configuration has the 
# same settings as the heater_bed section (described below).
[safe_z_home]
home_xy_position: 100,117.5
[extruder] 
step_pin: ar26 
dir_pin: ar28 
enable_pin: !ar24 
step_distance: .01 
nozzle_diameter: 0.400
#   Diameter of the nozzle orifice (in mm). This parameter must be provided.
filament_diameter: 1.750
#max_extrude_cross_section: Maximum area of the cross section of an extrusion line 
#   (in mm^2). This setting prevents excessive amounts of extrusion during relatively 
#   small XY moves. If a move requests an extrusion rate that would exceed this value 
#   it will cause an error to be returned. The default is: 4.0 * nozzle_diameter^2
#max_extrude_only_distance: 50.0 Maximum length (in mm of raw filament) that an 
#   extrude only move may be. If an extrude only move requests a distance greater 
#   than this value it will cause an error to be returned. The default is 50mm.
#max_extrude_only_velocity: Maximum velocity (in mm/s) of the extruder motor for 
#   extrude only moves. If this is not specified then it is calculated to match the 
#   limit an XY printing move with a max_extrude_cross_section extrusion would have.
#max_extrude_only_accel: Maximum acceleration (in mm/s^2) of the extruder motor for 
#   extrude only moves. If this is not specified then it is calculated to match the 
#   limit an XY printing move with a max_extrude_cross_section extrusion would have.
#pressure_advance: 0.0 The amount of raw filament to push into the extruder during 
#   extruder acceleration. An equal amount of filament is retracted during 
#   deceleration. It is measured in millimeters per millimeter/second. The default is 
#   0, which disables pressure advance.
#pressure_advance_lookahead_time: 0.010 A time (in seconds) to "look ahead" at future 
#   extrusion moves when calculating pressure advance. This is used to reduce the 
#   application of pressure advance during cornering moves that would otherwise cause 
#   retraction followed immediately by pressure buildup. This setting only applies if 
#   pressure_advance is non-zero. The default is 0.010 (10 milliseconds).
#
# The remaining variables describe the extruder heater.
heater_pin: ar10
#   PWM output pin controlling the heater. This parameter must be provided. 
#max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the heater_pin may 
#   be set to. The value 1.0 allows the pin to be set fully enabled for extended 
#   periods, while a value of 0.5 would allow the pin to be enabled for no more than 
#   half the time. This setting may be used to limit the total power output (over 
#   extended periods) to the heater. The default is 1.0.
sensor_type: EPCOS 100K B57560G104F 
sensor_pin: analog13 
#control: pid
#   Control algorithm (either pid or watermark). This parameter must be provided.
#pid_Kp: 25.047 
#pid_Ki: 1.136 
#pid_Kd: 138.072
min_extrude_temp: 170
min_temp: 0 
max_temp: 270
#   The maximum range of valid temperatures (in Celsius) that the heater must remain 
#   within. This controls a safety feature implemented in the micro-controller code - 
#   should the measured temperature ever fall outside this range then the 
#   micro-controller will go into a shutdown state. This check can help detect some 
#   heater and sensor hardware failures. Set this range just wide enough so that 
#   reasonable temperatures do not result in an error. These parameters must be 
#   provided.
# The heater_bed section describes a heated bed (if present - omit section if not 
# present).
[heater_bed] 
heater_pin: ar8 
sensor_type: EPCOS 100K B57560G104F 
sensor_pin: analog14 
control: pid 
pid_Kp: 61.684 
pid_Ki: 0.583 
pid_Kd: 1630.72 
min_temp: 0 
max_temp: 130
# Print cooling fan (omit section if fan not present).
[fan] 
pin: ar9
#hardware_pwm: False Micro-controller information.
[mcu] 
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A9AXPB7Z-if00-port0
#   The serial port to connect to the MCU. If unsure (or if it changes) see the 
#   "Where's my serial port?" section of the FAQ. The default is /dev/ttyS0
#baud: 250000 The baud rate to use. The default is 250000.
pin_map: arduino
# The printer section controls high level printer settings.
[printer] 
kinematics: cartesian 
max_velocity: 300
#   Maximum velocity (in mm/s) of the toolhead (relative to the print). This 
#   parameter must be specified.
max_accel: 3000
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the print). This 
#   parameter must be specified.
max_z_velocity: 12
#   For cartesian printers this sets the maximum velocity (in mm/s) of movement along 
#   the z axis. This setting can be used to restrict the maximum speed of the z 
#   stepper motor on cartesian printers. The default is to use max_velocity for 
#   max_z_velocity.
max_z_accel: 100
#square_corner_velocity: 5.0 The default is 5mm/s. Z height probe. One may define 
# this section to enable Z height probing hardware. When this section is enabled, 
# PROBE and QUERY_PROBE extended g-code commands become available. The probe section 
# also creates a virtual "probe:z_virtual_endstop" pin. One may set the stepper_z 
# endstop_pin to this virtual pin on cartesian style printers that use the probe in 
# place of a z endstop.
[probe] 
pin: ^!ar18
#	This creates a virtual "probe:z_virtual_endstop" pin for z-stop
x_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the x-axis. The 
#   default is 0.
y_offset: -50.0
#   The distance (in mm) between the probe and the nozzle along the y-axis. The 
#   default is 0.
z_offset: 0.0
#   The distance (in mm) between the bed and the nozzle when the probe triggers. This 
#   parameter must be provided.
speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s. activate_gcode: 
#   A list of G-Code commands (one per line) to execute prior to each probe attempt. 
#   This may be useful if the probe needs to be activated in some way. The default is 
#   to not run any special G-Code commands on activation.
#deactivate_gcode: A list of G-Code commands (one per line) to execute after each 
#   probe attempt completes. The default is to not run any special G-Code commands on 
#   deactivation.
#
# Bed tilt compensation. One may define a [bed_tilt] config section to enable move 
# transformations that account for a tilted bed.
#[bed_tilt] x_adjust: 0 y_adjust: 0 points: 40,10 100,10 160,10 160,100 100,100 
#	 40,100 40,180
#	100,180 160,180 ^ ^ ^ Keep 2 newlines after list of points ans end marker To 
#    be used with BED_TILT_CALIBRATE command
#speed: 100 Mesh Bed Leveling. One may define a [bed_mesh] config section to enable 
# move transformations that offset the z axis based on a mesh generated from probed 
# points. Note that bed_mesh and bed_tilt are incompatible, both cannot be defined. 
# BED_MESH_CALIBRATE
[bed_mesh] 
speed: 130
#   The default is 50.
mesh_min: 10,25
#   An X,Y point defining the minimum coordinate to probe on the bed. Note that this 
#   refers to the nozzle position, and take care that you do not define a point that 
#   will move the probe off of the bed. This parameter must be provided.
mesh_max: 185,150
#   An X,Y point defining the maximum coordinate to probe on the bed. Follow the same 
#   precautions as listed in min_point. Also note that this does not necessarily 
#   define the last point probed, only the maximum coordinate. This parameter must be 
#   provided.
probe_count: 8,10
#   A comma separated pair of integer values (X,Y) defining the number of points to 
#   probe along each axis. A single value is also valid, in which case that value 
#   will be for both axes. Default is 3,3 which probes a 3x3 grid.
# algorithm: lagrange
# bicubic_tension: 0.2
mesh_pps: 4,6
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 0.3
fade_end: 3
fade_target: 0


# Support for a display attached to the micro-controller. "RepRapDiscount 2004 Smart 
# Controller" type displays SEA17 note: the default display TEVO Tarantula:
[display] 
lcd_type: hd44780 
rs_pin: ar16 
e_pin: ar17 
d4_pin: ar23 
d5_pin: ar25 
d6_pin: ar27 
d7_pin: ar29
# These display inputs did not work. Not implemented yet? encoder_pins: ar31 ar33 
#click_pin: ar35 [homing_override] set_position_z: 5 gcode:
#	G90 G1 Z7 F600 ; Blindly lift the Z 2mm at start G28 X0 Y0 G1 X100 Y100 F3600 
#	G28 Z0
[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default]

[output_pin BEEPER_pin]
pin: ar37
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[gcode_macro M300]
default_parameter_S=1000
default_parameter_P=100
gcode:  SET_PIN PIN=BEEPER_pin VALUE={S}
        G4 P{P}
        SET_PIN PIN=BEEPER_pin VALUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.336
#*# pid_ki = 0.602
#*# pid_kd = 110.878
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.011875, 0.071875, -0.108750, -0.401250, -1.116250, -0.938125, -0.910000, -0.813125
#*# 	  -0.827500, -0.708750, -0.881250, -1.201250, -1.108750, -1.004375, -0.972500, -0.830000
#*# 	  -0.751250, -0.560000, -0.705000, -1.025625, -0.941875, -0.874375, -0.861875, -0.800000
#*# 	  -0.668125, -0.608125, -0.790000, -1.115000, -1.031250, -0.927500, -0.913750, -0.778750
#*# 	  -0.614375, -0.451250, -0.602500, -0.930625, -0.854375, -0.788125, -0.790625, -0.735625
#*# 	  -0.549375, -0.504375, -0.688125, -1.005625, -0.941250, -0.863750, -0.860625, -0.716250
#*# 	  -0.431250, -0.298125, -0.467500, -0.821250, -0.761875, -0.715000, -0.745625, -0.729375
#*# 	  -0.373125, -0.356250, -0.535625, -0.920000, -0.856875, -0.803125, -0.816250, -0.719375
#*# 	  -0.338125, -0.223125, -0.411875, -0.737500, -0.695000, -0.668750, -0.691250, -0.670000
#*# 	  -0.282500, -0.276250, -0.472500, -0.833125, -0.763750, -0.723750, -0.730000, -0.638125
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 10
#*# mesh_y_pps = 6
#*# min_y = 25.0
#*# x_count = 8
#*# max_y = 149.92
#*# mesh_x_pps = 4
#*# max_x = 185.0
